/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HR;

import test_new.*;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asbar Ali
 */
public class interview extends javax.swing.JInternalFrame {

    /**
     * Creates new form interview
     */
    public interview() {
        initComponents();
        
        interviewsearch();
       
        load_intereview();
       
        rand1();
        
        alredyadded();
    }
    
    void settime() {
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                Date d = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss a");
                String ss = sdf.format(d);
                
               // jLabel4.setText(ss);

            }
        }).start();
    }
    
    
public ImageIcon ResizeImage(String ImagePath) { 
        ImageIcon MyImage = new ImageIcon(ImagePath); Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(jLabel62.getWidth(), jLabel62.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg); 
        return image;
        }
public ImageIcon ResizeImage2(String ImagePath) { 
        ImageIcon MyImage = new ImageIcon(ImagePath); Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(jLabel33.getWidth(), jLabel33.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg); 
        return image;
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jButton23 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jButton24 = new javax.swing.JButton();
        jTextField24 = new javax.swing.JTextField();
        jButton26 = new javax.swing.JButton();
        jTextField25 = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jTextField30 = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jTextField27 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel69 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jDateChoose4 = new com.toedter.calendar.JDateChooser();
        jTimeChooser1 = new lu.tudor.santec.jtimechooser.JTimeChooser();

        setBorder(null);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel6.setName("Holding Summary"); // NOI18N
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member_ID", "Name", "Contact No", "Date", "Time", "Vacancy"
            }
        ));
        jScrollPane7.setViewportView(jTable7);

        jPanel6.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, 1150, 190));

        jButton23.setText("Add");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton23, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 320, 120, 30));

        jLabel29.setText("Date");
        jPanel6.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 280, 30, -1));
        jPanel6.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, -1, -1));

        jLabel40.setText("Conatct no");
        jPanel6.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, -1, 20));

        jLabel41.setText("Name");
        jPanel6.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, -1, -1));

        jButton24.setText("Update");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton24, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 320, 120, 30));
        jPanel6.add(jTextField24, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 140, -1));

        jButton26.setText("Delete");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton26, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 320, 120, 30));
        jPanel6.add(jTextField25, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 140, -1));

        jLabel42.setText("Time");
        jPanel6.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 210, 30, -1));
        jPanel6.add(jTextField30, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 250, 140, -1));

        jLabel43.setText("Vacancy");
        jPanel6.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 240, 50, -1));

        jLabel44.setText("New Member Id");
        jPanel6.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));

        jTextField27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField27ActionPerformed(evt);
            }
        });
        jPanel6.add(jTextField27, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 200, -1));

        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 51, 51));
        jLabel19.setText("Overview Of Interview Details");
        jPanel10.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        jPanel6.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 580, 30));

        jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel6.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, 110, 110));

        jLabel7.setText("Member Image");
        jPanel6.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 150, 90, 20));

        jButton3.setText("Browse");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 150, 120, 30));

        jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel60.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(0, 51, 51));
        jLabel60.setText("Interview New Members");
        jPanel17.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        jPanel6.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 580, 30));

        jLabel62.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel6.add(jLabel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 50, 430, 320));

        jLabel65.setText("Image Of CV");
        jPanel6.add(jLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 20, 260, -1));
        jPanel6.add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 180, 90, 20));

        jLabel67.setText("Upload CV");
        jPanel6.add(jLabel67, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 60, -1));

        jButton7.setText("Browse");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, 120, 30));
        jPanel6.add(jLabel69, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 140, 20));

        jButton8.setText("Search");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, 120, 30));
        jPanel6.add(jDateChoose4, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 290, 140, -1));
        jPanel6.add(jTimeChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 210, 140, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1296, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        String idinterview = jTextField27.getText();
        if(alredyadded()){
            return;
        }
        int idinterviews = Integer.parseInt(idinterview);
        String mcv= jLabel69.getText();
        String emimg=jLabel66.getText();
        String name= jTextField24.getText();

        String vacancy= jTextField30.getText();
        String cont_no=   jTextField25.getText();
                        Date dateFromDateChooser = jDateChoose4.getDate();
String dateString = String.format("%1$tY-%1$tm-%1$td", dateFromDateChooser);
   DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
Date date1 = new Date();

String time= jTimeChooser1.getFormatedTime();


                   if ( idinterview.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Enter the Employee ID ");
                else if ( mcv.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Brows the Employee CV");
                else if ( emimg.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Brows the Employee Image");
                else if (name.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Enter the Member Name");
                else if ( time.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Select the Employee time");
                else if((cont_no.length()!=10))    
                  JOptionPane.showMessageDialog(this, "Invalid Contact number (Contact number must be 10 digit)");
                else if (cont_no.charAt(0)!='0')
                   JOptionPane.showMessageDialog(this, "Invalid Contact number (Contact number Should start from 0)");
                 else if (vacancy.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Enter the Vacancy");
                  else if ( !vacancy.matches("[A-Z]+") && !vacancy.matches("[a-z]+")) {
                   JOptionPane.showMessageDialog(null,"Vacancy should only contain the letters");
                   jTextField30.setText("");
                  }else if ( dateString.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Select the Employee Date");
                 else if(dateFromDateChooser.before(date1)){
                     JOptionPane.showMessageDialog(null,"Interview Date is before the current Date");
                 }
                  
                 else{
                     int contact = Integer.parseInt(cont_no);
                     mcv = mcv.replace("\\","/");
                     emimg = emimg.replace("\\","/");
                     
                     DefaultTableModel dtm = (DefaultTableModel) jTable7.getModel();
                     try {
                         db.connect().createStatement().executeUpdate("insert into interview (idinterview, cv, mem_img, name, time, date, vacancy, contactno)"
                                 + " values ('"+idinterviews+"','"+mcv+"','"+emimg+"','"+name+"','"+time+"','"+dateString+"','"+vacancy+"','"+cont_no+"') ");
                         
                         JOptionPane.showMessageDialog(null, "Successfully Saved","Message",JOptionPane.INFORMATION_MESSAGE);
                         
                         jTextField27.setText("");
                         jLabel69.setText("");
                         jTextField24.setText("");
                         jTextField25.setText("");
                         
                         jLabel66.setText("");
                         
                         jTextField30.setText("");
                          jDateChoose4.setCalendar(null);
                         jLabel33.setIcon(null);
                         jLabel62.setIcon(null);
                         
                         dtm.setRowCount(0);
                         load_intereview();
                         
                         rand1();
                         
                     } catch (Exception e) {
                         e.printStackTrace();
                     }
                 }// TODO add your handling code here:

    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        String idinterview = jTextField27.getText();
        if(updateinter())
        {
            return;
        }
        int idinterviews = Integer.parseInt(idinterview);
        String mcv= jLabel69.getText();
        String emimg=jLabel66.getText();
        String name= jTextField24.getText();

                Date dateFromDateChooser = jDateChoose4.getDate();
String dateString = String.format("%1$tY-%1$tm-%1$td", dateFromDateChooser);
 DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
Date date1 = new Date();       
String time= jTimeChooser1.getFormatedTime();
        
        String vacancy= jTextField30.getText();
        String cont_no=   jTextField25.getText();
        
         
                   if ( idinterview.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Enter the Employee ID ");
                else if ( mcv.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Brows the Employee CV");
                else if ( emimg.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Brows the Employee Image");
                else if (name.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Enter the Member Name");
                else if ( time.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Select the Employee time");
                else if((cont_no.length()!=10))    
                  JOptionPane.showMessageDialog(this, "Invalid Contact number (Contact number must be 10 digit)");
                 else if (vacancy.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Enter the Vacancy");
                  else if ( !vacancy.matches("[A-Z]+") && !vacancy.matches("[a-z]+")) {
                   JOptionPane.showMessageDialog(null,"Vacancy should only contain the letters");
                   jTextField30.setText("");
                  }else if ( dateString.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Select the Employee Date");
                 else if(dateFromDateChooser.before(date1)){
                     JOptionPane.showMessageDialog(null,"Interview Date is before the current Date");
                 }
                
                else{

        mcv = mcv.replace("\\","/");
            emimg = emimg.replace("\\","/");

                DefaultTableModel dtm = (DefaultTableModel) jTable7.getModel();
                try {
                    db.connect().createStatement().executeUpdate("update interview set cv='"+mcv+"', mem_img='"+emimg+"',name='"+name+"', time='"+time+"', date='"+dateString+"',vacancy='"+vacancy+"', contactno='"+cont_no+"' where idinterview='"+idinterview+"' ");

                    JOptionPane.showMessageDialog(null, "Successfully Updated","Message",JOptionPane.INFORMATION_MESSAGE);

                    jTextField27.setText("");
                    jLabel69.setText("");
                    jTextField24.setText("");
                    jTextField25.setText("");
                    jLabel66.setText("");

                    jTextField30.setText("");
                     jDateChoose4.setCalendar(null);
                    jLabel33.setIcon(null);
                    jLabel62.setIcon(null);

                    rand1();

                    dtm.setRowCount(0);
                    load_intereview();

                } catch (Exception e) {
                    e.printStackTrace();
                }
                }
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        String mid= jTextField27.getText();
        int empids = Integer.parseInt(mid);

        DefaultTableModel dtm = (DefaultTableModel) jTable7.getModel();

        try {
            db.connect().createStatement().executeUpdate("delete from interview where idinterview='"+mid+"'");
            JOptionPane.showMessageDialog(null,"Successfully deleted","Deleted Message",JOptionPane.ERROR_MESSAGE);

            jTextField27.setText("");
            jLabel69.setText("");
            jTextField24.setText("");
            jTextField25.setText("");
           
            jLabel66.setText("");

            jTextField30.setText("");
             jDateChoose4.setCalendar(null);
            jLabel33.setIcon(null);
            jLabel62.setIcon(null);

            rand1();

            dtm.setRowCount(0);
            load_intereview();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jTextField27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField27ActionPerformed
        interviewsearch();
        nointerview();
    }//GEN-LAST:event_jTextField27ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JFileChooser file = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "JPG & GIF Images", "jpg", "gif");
        file.setFileFilter(filter);
        int result = file.showSaveDialog(null);

        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            jLabel66.setText(path);
            jLabel33.setIcon(ResizeImage2(path)); }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        JFileChooser file = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "JPG & GIF Images", "jpg", "gif");
        file.setFileFilter(filter);
        int result = file.showSaveDialog(null);

        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            jLabel69.setText(path);
            jLabel62.setIcon(ResizeImage(path)); }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        interviewsearch();
        nointerview();
    }//GEN-LAST:event_jButton8ActionPerformed
 public void rand1() {
         Random rand = new Random();
        
        int n = rand.nextInt(50)+1;
        
        jTextField27.setText(""+n);
    }
   public void load_intereview() {
        DefaultTableModel dtm = (DefaultTableModel) jTable7.getModel();
            
            try {
                
               ResultSet rs= db.connect().createStatement().executeQuery("select * from interview");
               
               while(rs.next()){
                Vector v = new Vector();
                v.add(rs.getString("idinterview"));
                v.add(rs.getString("name"));
                v.add(rs.getString("contactno"));
                v.add(rs.getString("date"));
                v.add(rs.getString("time"));
                v.add(rs.getString("vacancy"));
             
                
              dtm.addRow(v);
               
              
               }
                
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }
public void interviewsearch() {
      String id= jTextField27.getText();  
      
       try {
                ResultSet rs=   db.connect().createStatement().executeQuery("select * from interview where idinterview='"+id+"'");
     
                while(rs.next()){
                         jTextField24.setText(rs.getString("name"));
                         String st=String.valueOf(rs.getInt("contactno"));
                  // jTextField25.setText(rs.getInt("contactno")+"");
                         jTextField25.setText("0"+st);
                  jTextField30.setText(rs.getString("vacancy"));
                    jDateChoose4.setDate(rs.getDate("date")); 
                  jTimeChooser1.setTime(rs.getTime("time"));
                   jLabel66.setText(rs.getString("mem_img"));
                  jLabel69.setText(rs.getString("cv"));
                  
                   String jl = rs.getString("cv");
                   String j= rs.getString("mem_img");
                   
                   jLabel62.setIcon(ResizeImage(jl));
                   jLabel33.setIcon(ResizeImage2(j));
                 
                   
                   
                }
            
            } catch (Exception e) {
        }
                }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private com.toedter.calendar.JDateChooser jDateChoose4;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable7;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField30;
    private lu.tudor.santec.jtimechooser.JTimeChooser jTimeChooser1;
    // End of variables declaration//GEN-END:variables

    private boolean alredyadded() {
         String id1 = jTextField27.getText();
         int i=0;
        try {
            
            ResultSet rs= db.connect().createStatement().executeQuery("select idinterview from interview");
            while (rs.next()){
            String idem =  rs.getString("idinterview");
            if(idem.equals(id1)){
                i=i+1;
            }
            }
            
            
        } catch (Exception e) {
        }
        if(i==1){
             JOptionPane.showMessageDialog(null,"You have already Registered this Employee only you can update Now");
             return true;
            }else{
            return false; 
        }
       
    }

    private boolean nointerview() {
        String id2 = jTextField27.getText();
         int i=0;
        try {
            
            ResultSet rs= db.connect().createStatement().executeQuery("select idinterview from interview");
            while (rs.next()){
            String idem =  rs.getString("idinterview");
            if( idem.equals(id2)){
                i=i+1;
            } else {
            }
            }
            
          
            }
        catch (Exception e) {
        }
          if(i==0){
             JOptionPane.showMessageDialog(null,"There is no employee with this ID");
             jTextField27.setText("");    
             return true;
            }else{
                return false;
            }
    }

    private boolean updateinter() {
       String id1 = jTextField27.getText();
         int i=0;
        try {
            
            ResultSet rs= db.connect().createStatement().executeQuery("select idinterview from interview");
            while (rs.next()){
            String idem =  rs.getString("idinterview");
            if(idem.equals(id1)){
                i=i+1;
            }
            }
            
            
        } catch (Exception e) {
        }
        if(i!=1){
             JOptionPane.showMessageDialog(null,"You have Not Added This Member");
             return true;
            }else{
            return false; 
        }
    }
}
