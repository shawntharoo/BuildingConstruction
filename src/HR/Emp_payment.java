/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HR;

import test_new.*;
import java.awt.Image;
import static java.lang.Float.parseFloat;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asbar Ali
 */
public class Emp_payment extends javax.swing.JInternalFrame {

    
    public Emp_payment() {
        initComponents();
        jRadioButton3.isSelected();
        searchpayment();
        searchpaymentinside();
        paymentshort_l();
        paymentday_l();
        loadpayment();
        alreadypaid();
        initial_load();
    }

    
     public ImageIcon ResizeImage(String ImagePath) { 
        ImageIcon MyImage = new ImageIcon(ImagePath); Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(jLabel34.getWidth(), jLabel34.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg); 
        return image;
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jLabel57 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jTextField35 = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jButton11 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(1296, 672));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setPreferredSize(new java.awt.Dimension(1296, 646));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 130, 140, 150));

        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(0, 51, 51));
        jLabel49.setText("show Payment History");
        jPanel12.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jPanel4.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 10, 580, 30));

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Date", "Paid", "Amount"
            }
        ));
        jScrollPane5.setViewportView(jTable5);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 60, 680, 450));

        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel57.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(0, 51, 51));
        jLabel57.setText("Show Payments Of Emplooyees");
        jPanel14.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        jPanel4.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 510, 30));

        jLabel4.setText("Basic Salary");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, -1));

        jLabel5.setText("Allowance");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, -1, -1));

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jPanel4.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 200, -1));
        jPanel4.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 300, 200, -1));

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 500, 75, -1));

        jLabel11.setText("Total salary");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, -1, -1));

        jLabel21.setText("Deducted Amount ");
        jPanel4.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 110, 20));

        jLabel12.setText("OT Amount");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 70, -1));

        jLabel46.setText("Employee Id");
        jPanel4.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        jTextField35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField35ActionPerformed(evt);
            }
        });
        jPanel4.add(jTextField35, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 200, -1));

        jLabel45.setText("Paid");
        jPanel4.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 50, -1));

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setSelected(true);
        jRadioButton3.setText("No");
        jPanel4.add(jRadioButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 420, -1, -1));

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setText("Yes");
        jPanel4.add(jRadioButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 420, -1, -1));

        jButton11.setText("Search");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 90, 75, -1));

        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 500, 75, -1));

        jLabel1.setText("Employee ID");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 90, -1));

        jLabel2.setText("0");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 180, -1));

        jLabel3.setText("0");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 180, -1));

        jLabel6.setText("0");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 380, 170, -1));
        jPanel4.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 200, -1));

        jButton3.setText("Print Report");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 500, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     String emp_id= jTextField2.getText();
     if(noemp_payment()){
            return;
        }
    else  if(update_payment()){
            return;
        }
            
            String basic= jTextField4.getText();
             String allow= jTextField5.getText();
              if ( basic.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Enter Basic Salary"); 
   
            
//             if ( !allow.matches("[0-9]")) {
//                   JOptionPane.showMessageDialog(null,"Allowance should be Digits");
//                   jTextField4.setText("");
//                 }
//             else if ( !allow.matches("[0-9]")) {
//                   JOptionPane.showMessageDialog(null,"Allowance should be Digits");
//                   jTextField5.setText("");
//                 }
//             else
//             {
            
            float basic_sal = Float.parseFloat(basic);
            if(basic_sal<=0){
                JOptionPane.showMessageDialog(null,"basic Salary Should greater than 0");
                jTextField4.setText(null);
        }
             else  if ( allow.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"If no Allowance Enter 0"); 
         
            float devide = (float) (basic_sal/30.0);
            
            int x = searchpaymentinside();
            float ota = x*1000;
            
            jLabel2.setText(ota+"");
            
            String ot= jLabel2.getText();
            
           
            float allowance = parseFloat(allow);
            
            int y= paymentshort_l();
            int z =paymentday_l();
            float ded = (float) (((devide/2.0)*y) + devide*z);
            jLabel3.setText(ded+"");
            String deduct= jLabel3.getText();
            float deduct_amt = Float.parseFloat(deduct);
            
            float ful = basic_sal-ded+ota+allowance;
            jLabel6.setText(ful+"");
            String full= jLabel6.getText();
            float full_amt = Float.parseFloat(full);
            
            String paid=null;
             String paiddate=null;
            
            if(jRadioButton4.isSelected()){
                paid="yes";
            }else{
                paid="No";
            }
            if ("yes".equals(paid))
            {
            Date d = new Date();
            SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd");
            paiddate = sd.format(d);
            }else{}
            Date d = new Date();
            SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd");
            String da = sd.format(d);
            
            String date[] = da.split("-");
            
            String idemp_pay=emp_id+date[0]+date[1];
            
                

                try {
                   db.connect().createStatement().executeUpdate("update emp_payment set msalary='"+basic_sal+"', "
                        + "allowance='"+allowance+"',Paid='"+paid+"',otamount='"+ota+"',hdamount='"+deduct_amt+"',tsalary='"+full_amt+"'where idemp_payment='"+idemp_pay+"'  ");

                    JOptionPane.showMessageDialog(null, "Successfully Updated","Message",JOptionPane.INFORMATION_MESSAGE);

                    jTextField35.setText("");
                jLabel2.setText("");
                jTextField2.setText("");
                jTextField4.setText("");
                jTextField5.setText("");
                jLabel6.setText("");
                jLabel3.setText("");
                jRadioButton3.setSelected(true);
                  initial_load();
                    

                } catch (Exception e) {
                    e.printStackTrace();
                }
            // }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        
        searchpayment();
        noemp_payment();
         loadpayment();
          imageload();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jTextField35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField35ActionPerformed
        
        searchpayment();
         noemp_payment();
        loadpayment();
        imageload();
    }//GEN-LAST:event_jTextField35ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
            
            String emp_id= jTextField2.getText();
            if(noemp_payment()){
            return;
        }
             if(alreadypaid()){
              return;   
             }
            String basic= jTextField4.getText();
            String allow= jTextField5.getText();
             if ( basic.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Enter Basic Salary"); 
//              if ( !basic.matches("[0-9]")) {
//                   JOptionPane.showMessageDialog(null,"Basic Salary should be Digits");
//                   jTextField4.setText("");
//                 }
//             else if ( !allow.matches("[0-9]")) {
//                   JOptionPane.showMessageDialog(null,"Allowance should be Digits");
//                   jTextField5.setText("");
//                 }
//             else
//             {
           
          
            
            float basic_sal = Float.parseFloat(basic);
            if(basic_sal<=0){
                JOptionPane.showMessageDialog(null,"basic Salary Should greater than 0");
                jTextField4.setText(null);
        }
             else  if ( allow.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"If no Allowance Enter 0"); 
         
            float devide = (float) (basic_sal/30.0);
            
            int x = searchpaymentinside();
            float ota = x*1000;
            
            jLabel2.setText(ota+"");
            
            String ot= jLabel2.getText();
            
            
            float allowance = parseFloat(allow);
            
            int y= paymentshort_l();
            int z =paymentday_l();
            float ded = (float) (((devide/2.0)*y) + devide*z);
            jLabel3.setText(ded+"");
            String deduct= jLabel3.getText();
            float deduct_amt = Float.parseFloat(deduct);
            
            float ful = basic_sal-ded+ota+allowance;
            jLabel6.setText(ful+"");
            String full= jLabel6.getText();
            float full_amt = Float.parseFloat(full);
            
            String paid=null;
             String paiddate=null;
            
            if(jRadioButton4.isSelected()){
                paid="yes";
                 Date d = new Date();
            SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd");
            paiddate = sd.format(d);
            }else{
                paid="No";
            }
            
            Date d = new Date();
            SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd");
            String da = sd.format(d);
            
            String date[] = da.split("-");
            
            String idemp_pay=emp_id+date[0]+date[1];
            
           
            
            try {
                db.connect().createStatement().executeUpdate("insert into emp_payment (idemp_payment, empid, msalary, otamount, allowance, hdamount, tsalary, Paid ,date)"
                        + " values ('"+idemp_pay+"','"+emp_id+"','"+basic_sal+"','"+ot+"','"+allowance+"','"+deduct_amt+"','"+full_amt+"','"+paid+"','"+paiddate+"') ");
                
                
                JOptionPane.showMessageDialog(null, "Successfully Added","Message",JOptionPane.INFORMATION_MESSAGE);
                
                jTextField35.setText("");
                jLabel2.setText("");
                jTextField2.setText("");
                jTextField4.setText("");
                jTextField5.setText("");
                jLabel6.setText("");
                jLabel3.setText("");
                jRadioButton3.setSelected(true);
                  initial_load();
                
                
            } catch (Exception e) {
                e.printStackTrace();
            }
         //    }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     Ireport ir = new Ireport();
     ir.setVisible(true);
     this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable5;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField35;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables

    

    private void searchpayment() {
 String id= jTextField35.getText();
            
            try {
                ResultSet rs=   db.connect().createStatement().executeQuery("select * from emp_payment where empid='"+id+"'");
     
                while(rs.next()){
                   jTextField2.setText(rs.getString("empid"));
                   jTextField4.setText(rs.getInt("msalary")+"");
                   jLabel2.setText(rs.getInt("otamount")+"");
                   jTextField5.setText(rs.getInt("allowance")+"");
                   jLabel3.setText(rs.getInt("hdamount")+"");
                   jLabel6.setText(rs.getInt("tsalary")+"");
                   String sl = rs.getString("paid");
                   if(sl.equals("yes")){
                       jRadioButton4.setSelected(true);
                       
                    }else if(sl.equals("No")){
                       jRadioButton3.setSelected(true);
                   }
                
                                    
                }
            
            } catch (Exception e) {
        }
    }
 private Integer  searchpaymentinside() {
        String id= jTextField2.getText();
            Integer iss=0;
            try {
                ResultSet rs=   db.connect().createStatement().executeQuery("select * from attendence where eid='"+id+"'");
    
                while(rs.next()){
                        iss = rs.getInt("THours");
                }
            
            } catch (Exception e) {
        
            }
        return iss;
            }   

    private Integer paymentshort_l() {
        String id= jTextField2.getText();
            Integer s_l=0;
            try {
                ResultSet rs=   db.connect().createStatement().executeQuery("select * from leave_status where Emp_id='"+id+"'");
    
                while(rs.next()){
                        s_l = rs.getInt("current_sh_l");
                      
                }
            
            } catch (Exception e) {
        
            }
        return s_l;
    }

    private Integer paymentday_l() {
        String id= jTextField2.getText();
            Integer d_l=0;
            try {
                ResultSet rs=   db.connect().createStatement().executeQuery("select * from leave_status where Emp_id='"+id+"'");
    
                while(rs.next()){
                        d_l = rs.getInt("current_l");
                      
                }
            
            } catch (Exception e) {
        
            }
        return d_l;
    }

    private void loadpayment() {
       String id= jTextField35.getText();
        DefaultTableModel dtm = (DefaultTableModel) jTable5.getModel();
         dtm.setRowCount(0);
            
            try {
                ResultSet rs=   db.connect().createStatement().executeQuery("select * from emp_payment where empid='"+id+"'");
     
                 while(rs.next()){
                Vector v = new Vector();
                v.add(rs.getString("empid"));
                v.add(rs.getString("date"));
                v.add(rs.getString("paid"));
                v.add(rs.getInt("tsalary"));

              dtm.addRow(v);
                }
            
            } catch (Exception e) {
        }
            
            
    }

    private boolean alreadypaid() {
         String id1 = jTextField2.getText();
         int i=0;
        Date d = new Date();
            SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd");
            String da = sd.format(d);
            
            String date[] = da.split("-");
            
            String id_pay=id1+date[0]+date[1];
        try {
            
            ResultSet rs= db.connect().createStatement().executeQuery("select idemp_payment from emp_payment");
            while (rs.next()){
            String idem =  rs.getString("idemp_payment");
            if(idem.equals(id_pay)){
                i=i+1;
            }
            }
            
            
        } catch (Exception e) {
        }
        if(i==1){
             JOptionPane.showMessageDialog(null,"You have already Addded this Employee only you can Update Now");
             return true;
            }else{
            return false;
        }
    }

    private void initial_load() {
        DefaultTableModel dtm = (DefaultTableModel) jTable5.getModel();
         dtm.setRowCount(0);
            
            try {
                ResultSet rs=   db.connect().createStatement().executeQuery("select * from emp_payment ");
     
                 while(rs.next()){
                Vector v = new Vector();
                v.add(rs.getString("empid"));
                v.add(rs.getString("date"));
                v.add(rs.getString("paid"));
                v.add(rs.getInt("tsalary"));

              dtm.addRow(v);
                }
            
            } catch (Exception e) {
        }
    }

    private boolean noemp_payment() {
       String id2 = jTextField2.getText();
         int i=0;
        try {
            
            ResultSet rs= db.connect().createStatement().executeQuery("select idemployee from employee");
            while (rs.next()){
            String idem =  rs.getString("idemployee");
            if( idem.equals(id2)){
                i=i+1;
            } else {
            }
            }
            
          
            }
        catch (Exception e) {
        }
          if(i==0){
             JOptionPane.showMessageDialog(null,"There is no employee with this ID");
             jTextField2.setText("");
             jTextField35.setText("");
             
             
             return true;
            }else{
                return false;
            }
          
    }

    private void imageload() {
       String id= jTextField35.getText();  
            try {
                ResultSet rs=   db.connect().createStatement().executeQuery("select * from employee where idemployee='"+id+"'");
     
                while(rs.next()){
                  
                   String emp = rs.getString("empimage");
                   
                 
                   
                     jLabel34.setIcon(ResizeImage(emp));
                     
                   
                   
                }
            
            } catch (Exception e) {
        }
    }

    private boolean update_payment() {
       String id1 = jTextField2.getText();
         int i=0;
        try {
            
            ResultSet rs= db.connect().createStatement().executeQuery("select empid from emp_payment");
            while (rs.next()){
            String idem =  rs.getString("empid");
            if(idem.equals(id1)){
                i=i+1;
            }
            }
            
            
        } catch (Exception e) {
        }
        if(i==0){
             JOptionPane.showMessageDialog(null,"You have Not registered This Employee");
             return true;
            }else{
            return false; 
        } 
    }
    
    

 
}

    
