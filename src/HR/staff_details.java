/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HR;

import test_new.*;
import java.awt.Image;
import java.io.File;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asbar Ali
 */
public class staff_details extends javax.swing.JInternalFrame {

    /**
     * Creates new form staff_details
     */
    public staff_details() {
        initComponents();
          initComponents();
        
        loadsearch();
       
        load_emp_reg();
        load_emp_reg1();
        rand();
        alreadyadded();
     
       
       
        
        jComboBox1.addItem("Male");
        jComboBox1.addItem("Female");
        
    }
 public ImageIcon ResizeImage(String ImagePath) { 
        ImageIcon MyImage = new ImageIcon(ImagePath); Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg); 
        return image;
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jTextField11 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jTextField13 = new javax.swing.JTextField();
        jButton17 = new javax.swing.JButton();
        jTextField16 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel36 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jTextField26 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel72 = new javax.swing.JLabel();
        jButton30 = new javax.swing.JButton();
        jLabel68 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jTextField22 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jLabel74 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        label = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1296, 646));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setName("Holding Summary"); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee_ID", "Name", "Date", "Occupation", "EMail"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 1220, 170));

        jButton5.setText("Add");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 60, 120, 30));
        jPanel2.add(jTextField11, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, 250, -1));

        jLabel25.setText("Occupation");
        jPanel2.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));
        jPanel2.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, -1, -1));

        jLabel28.setText("Conatct no");
        jPanel2.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, 20));

        jLabel30.setText("Last Name");
        jPanel2.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, -1, -1));

        jButton6.setText("Update");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 100, 120, 30));
        jPanel2.add(jTextField13, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 200, -1));

        jButton17.setText("Delete");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 140, 120, 30));

        jTextField16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField16ActionPerformed(evt);
            }
        });
        jPanel2.add(jTextField16, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 200, -1));

        jLabel1.setText("Gender");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        jLabel2.setText("Address");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, -1, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setPreferredSize(new java.awt.Dimension(200, 94));
        jScrollPane2.setViewportView(jTextArea1);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 110, 250, 90));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 75, -1));

        jLabel36.setText("First Name");
        jPanel2.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));
        jPanel2.add(jTextField14, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 200, -1));

        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 51));
        jLabel9.setText("Register Employees");
        jPanel7.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        jPanel2.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 1220, 30));

        jLabel38.setText("Employee Id");
        jPanel2.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, -1));

        jTextField26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField26ActionPerformed(evt);
            }
        });
        jPanel2.add(jTextField26, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, 200, 20));

        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 51, 51));
        jLabel23.setText("Employee Registration Details");
        jPanel9.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        jPanel2.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 1220, 30));

        jLabel71.setText("Employee Image");
        jPanel2.add(jLabel71, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 110, 100, 20));

        jButton4.setText("Browse");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 100, 120, 30));
        jPanel2.add(jLabel72, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 140, 200, 10));

        jButton30.setText("Browse");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton30, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 60, 120, 30));

        jLabel68.setText("Upload CV");
        jPanel2.add(jLabel68, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 70, 60, -1));

        jLabel73.setText("E-Mail");
        jPanel2.add(jLabel73, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        jTextField22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField22ActionPerformed(evt);
            }
        });
        jPanel2.add(jTextField22, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, 200, -1));

        jButton10.setText("Search");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 350, 120, -1));
        jPanel2.add(jLabel74, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 140, 200, 10));
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 60, 180, 20));

        jLabel4.setText("Specialization");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 230, -1, -1));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "civil engineer", "electrical enginner", "construction engineer", "unified engineer", "mechanical engineer", "industrial engineer", "other" }));
        jPanel2.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 230, 250, -1));

        jButton1.setText("View");
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 140, 120, 30));

        jLabel5.setText("View CV");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 150, 90, -1));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "By Name", "By EID" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 350, 120, -1));
        jPanel2.add(label, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 150, 30, 10));

        jTabbedPane1.addTab("tab1", jPanel2);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee_ID", "Name", "Date", "Occupation", "EMail"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1340, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab2", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public static String path = null;
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        
        String empid= jTextField26.getText();
          if(alreadyadded()){
            return;
        }
        int empids = Integer.parseInt(empid);
        String cv= jLabel74.getText();
        String empimg=jLabel72.getText();
        String fname= jTextField14.getText();
        String lname= jTextField11.getText();
        String occ= jTextField13.getText();
       String cont_no = jTextField16.getText();
        String adddrs= jTextArea1.getText();
        String gender= jComboBox1.getSelectedItem().toString();
         String special= jComboBox2.getSelectedItem().toString();
        String email= jTextField22.getText();
        String eml="^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
		+ "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
        
          if ( empid.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Enter the Employee ID "); 
          else if ( cv.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Brows the Employee CV");
             else if ( empimg.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Brows the Employee Image");
               else if ( fname.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Enter the Employee First Name");
               else if ( !fname.matches("[A-Z]+") && !fname.matches("[a-z]+")) {
                   JOptionPane.showMessageDialog(null,"first Name should only contain the letters");
                   jTextField14.setText("");
               } else if (lname.isEmpty())
                   JOptionPane.showMessageDialog(null,"Enter the Employee Last Name");
                else if ( !lname.matches("[A-Z]+") && !lname.matches("[a-z]+")) {
                   JOptionPane.showMessageDialog(null,"Last Name should only contain the letters");
                   jTextField11.setText("");
               }else if (occ.isEmpty())
                   JOptionPane.showMessageDialog(null,"Enter the Employee Occupaiton");
               
               else if((cont_no.length()!=10))
                   JOptionPane.showMessageDialog(this, "Invalid Contact number (Contact number must be 10 digit)");
               else if (cont_no.charAt(0)!='0')
                   JOptionPane.showMessageDialog(this, "Invalid Contact number (Contact number Should start from 0)");
               else if ( adddrs.isEmpty())
                   JOptionPane.showMessageDialog(null,"Enter the Employee Address");
                else if (!email.matches(eml))
                   JOptionPane.showMessageDialog(null,"Invalid Email(Email must be contained '@' & '.' symbols)");
               
               
               else{
                   
                   Date d = new Date();
                   SimpleDateFormat sdf  = new SimpleDateFormat("yyyy-MM-dd");
                   String date= sdf.format(d);
                   

                   cv = cv.replace("\\","/");
                   
                   empimg = empimg.replace("\\","/");
                   //            String parts[]= cv.split("/");
                   //            String cvname=null;
                   //            for(int i=0;i< parts.length;i++){
                   //                cvname=cvname+parts[i]+"";
                   //            }
                   DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                   
                   try {
                       db.connect().createStatement().executeUpdate("insert into employee (idemployee, fname, lname, occupation, contactno, gender, specialization, email, address, empimage, cvimage,date)"
                               + " values ('"+empids+"','"+fname+"','"+lname+"','"+occ+"','"+cont_no+"','"+gender+"','"+special+"','"+email+"','"+adddrs+"','"+path+"','"+cv+"','"+date+"') ");
                       
                       JOptionPane.showMessageDialog(null, "Successfully Saved","Message",JOptionPane.INFORMATION_MESSAGE);
                       
                       jTextField26.setText("");
                       jLabel74.setText("");
                       jTextField14.setText("");
                       jTextField13.setText("");
                       jTextField16.setText("");
                       jTextField22.setText("");
                       jLabel72.setText("");
                       jTextField11.setText("");
                       jTextArea1.setText("");
                       
                       rand();
                       
                     //  label.setIcon(null);
                       
                       dtm.setRowCount(0);
                       load_emp_reg();
                       
                   } catch (Exception e) {
                       e.printStackTrace();
                   }
                   
               }
                
                 
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
     String empid= jTextField26.getText();
      if(updatestaff())
        {
            return;
        }
        int empids = Integer.parseInt(empid);
        String cv= jLabel74.getText();
        String empimg=jLabel72.getText();
        String fname= jTextField14.getText();
        String lname= jTextField11.getText();
        String occ= jTextField13.getText();
       String cont_no = jTextField16.getText();
        String adddrs= jTextArea1.getText();
        String gender= jComboBox1.getSelectedItem().toString();
         String special= jComboBox2.getSelectedItem().toString();
        String email= jTextField22.getText();
        String eml="^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
		+ "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
        
          if ( empid.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Enter the Employee ID "); 
          else if ( cv.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Brows the Employee CV");
             else if ( empimg.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Brows the Employee Image");
               else if ( fname.isEmpty()) 
                     JOptionPane.showMessageDialog(null,"Enter the Employee First Name");
               else if ( !fname.matches("[A-Z]+") && !fname.matches("[a-z]+")) {
                   JOptionPane.showMessageDialog(null,"first Name should only contain the letters");
                   jTextField14.setText("");
               } else if (lname.isEmpty())
                   JOptionPane.showMessageDialog(null,"Enter the Employee Last Name");
                else if ( !lname.matches("[A-Z]+") && !lname.matches("[a-z]+")) {
                   JOptionPane.showMessageDialog(null,"Last Name should only contain the letters");
                   jTextField11.setText("");
               }else if (occ.isEmpty())
                   JOptionPane.showMessageDialog(null,"Enter the Employee Occupaiton");
               else if((cont_no.length()!=10))
                   JOptionPane.showMessageDialog(this, "Invalid Contact number (Contact number must be 10 digit)");
               else if (cont_no.charAt(0)!='0')
                   JOptionPane.showMessageDialog(this, "Invalid Contact number (Contact number Should start from 0)");
               else if ( adddrs.isEmpty())
                   JOptionPane.showMessageDialog(null,"Enter the Employee Address");
               else if (!email.matches(eml))
                   JOptionPane.showMessageDialog(null,"Invalid Email(Email must be contained '@' & '.' symbols)");
               
               
               else{
                   
                   Date d = new Date();
                   SimpleDateFormat sdf  = new SimpleDateFormat("yyyy-MM-dd");
                   String date= sdf.format(d);
                   

                   cv = cv.replace("\\","/");   
                   System.out.println("Start "+empimg);
                   
                   empimg = empimg.replace("\\","/");
                   System.out.println("end "+empimg);
                   DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
       
                try {
                    db.connect().createStatement().executeUpdate("update employee set fname='"+fname+"', lname='"+lname+"', "
                        + "occupation='"+occ+"', contactno='"+cont_no+"', gender='"+gender+"',specialization='"+special+"',email='"+email+"', address='"+adddrs+"', empimage='"+empimg+"', cvimage='"+cv+"' where idemployee='"+empid+"' ");

                    JOptionPane.showMessageDialog(null, "Successfully Updated","Message",JOptionPane.INFORMATION_MESSAGE);

                    jTextField26.setText("");
                    jLabel74.setText("");
                    jTextField14.setText("");
                    jTextField13.setText("");
                    jTextField16.setText("");
                    jTextField22.setText("");
                    jLabel72.setText("");
                    jTextField11.setText("");
                    jTextArea1.setText("");
                    label.setText("");

                   // label.setIcon(null);
                    rand();

                    dtm.setRowCount(0);
                    load_emp_reg();

                } catch (Exception e) {
                    e.printStackTrace();
                }
                }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        String empid= jTextField26.getText();
        int empids = Integer.parseInt(empid);

        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();

        try {
            db.connect().createStatement().executeUpdate("delete from employee where idemployee='"+empid+"'");
            JOptionPane.showMessageDialog(null,"Successfully deleted","Deleted Message",JOptionPane.ERROR_MESSAGE);

            jTextField26.setText("");
            jLabel74.setText("");
            jTextField14.setText("");
            jTextField13.setText("");
            jTextField16.setText("");
            jTextField22.setText("");
            jLabel72.setText("");
            jTextField11.setText("");
            jTextArea1.setText("");
            label.setText("");

           // label.setIcon(null);
            rand();

            dtm.setRowCount(0);
             load_emp_reg();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jTextField16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField16ActionPerformed

    private void jTextField26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField26ActionPerformed
        loadsearch();
        nostaff();
    }//GEN-LAST:event_jTextField26ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        JFileChooser file = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "JPG & GIF Images", "jpg", "gif");
        file.setFileFilter(filter);
        int result = file.showSaveDialog(null);

        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            jLabel72.setText(path);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        JFileChooser file = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "JPG & GIF Images", "jpg", "gif");
        file.setFileFilter(filter);
        int result = file.showSaveDialog(null);

        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = file.getSelectedFile();
            path = selectedFile.getAbsolutePath();

            System.out.println(path);
           // label.setIcon(ResizeImage(path));
            jLabel74.setText(path);
        }
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
       
        String id=jTextField26.getText();
        
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
         
        String type=null;
        ResultSet rs = null;
            
        try {
            if(jComboBox3.getSelectedItem().toString().equals("By Name")){
            type="fname";
             rs= db.connect().createStatement().executeQuery("select * from employee where "+type+" like '"+id+"%'");
         
        }
        
        
        else if(jComboBox3.getSelectedItem().toString().equals("By EID")){
            type="idEmployee";
            rs= db.connect().createStatement().executeQuery("select * from employee where "+type+"='"+id+"'");
            
        }
        
            while(rs.next()){
                Vector v = new Vector();
                v.add(rs.getString("idemployee"));
                v.add(rs.getString("fname"));
                v.add(rs.getString("date"));
                v.add(rs.getString("occupation"));
                v.add(rs.getString("email"));
                dtm.addRow(v);
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int i = jTable1.getSelectedRow();
        int j = jTable1.getSelectedColumn();
        
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        String value = dtm.getValueAt(i, 0).toString();
        
        
        try {
            ResultSet rs= db.connect().createStatement().executeQuery("select * from employee where idemployee = '"+value+"'");
            while(rs.next()){
               jTextField14.setText(rs.getString("fname"));
                   jTextField11.setText(rs.getString("lname"));
                   String st=String.valueOf(rs.getInt("contactno"));
                  // jTextField16.setText(rs.getInt("contactno")+"");
                         jTextField16.setText("0"+st);
                   jTextField13.setText(rs.getString("occupation"));
                   jTextField22.setText(rs.getString("email"));
                   jTextArea1.setText(rs.getString("address"));
                   jLabel72.setText(rs.getString("empimage"));
                  jLabel74.setText(rs.getString("cvimage"));
                  
                   String cvimg  = rs.getString("cvimage");
                   
                   String gender = rs.getString("gender");
                   String special = rs.getString("specialization");
                    System.out.println(special);
                   //  label.setIcon(ResizeImage(cvimg));
                     jComboBox2.setSelectedItem(special);
                     
                   
                   if(gender.equals("Male")){
                       jComboBox1.addItem("Male");
                       jComboBox1.addItem("Female");
                       
                    }else{
                       jComboBox1.addItem("Female");
                       jComboBox1.addItem("Male");
                   }
                }
            
            }  
            
        catch (Exception e) {
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField22ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField22ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
     
    }//GEN-LAST:event_jTable2MouseClicked

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        String type=null;

        if(jComboBox3.getSelectedItem().toString().equals("By EID")){
            type="idEmployee";
            
        }
        System.out.println(type);
    }//GEN-LAST:event_jComboBox3ActionPerformed
 public void rand() {
     Random rand = new Random();
        
        int n = rand.nextInt(500000000)+1;
        
        jTextField26.setText(""+n); 
 }
   public void load_emp_reg() {
   
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            
            try {
                
               ResultSet rs= db.connect().createStatement().executeQuery("select * from employee");
               
               while(rs.next()){
                Vector v = new Vector();
                v.add(rs.getString("idemployee"));
                v.add(rs.getString("fname"));
                v.add(rs.getString("date"));
                v.add(rs.getString("occupation"));
                v.add(rs.getString("email"));
             
                
              dtm.addRow(v);
               
              
               }
                
        } catch (Exception e) {
            e.printStackTrace();
        }
            
        
    }
       public void load_intereview() {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            
            try {
                
               ResultSet rs= db.connect().createStatement().executeQuery("select * from interview");
               
               while(rs.next()){
                Vector v = new Vector();
                v.add(rs.getString("name"));
                v.add(rs.getString("contactno"));
                v.add(rs.getString("date"));
                v.add(rs.getString("time"));
                v.add(rs.getString("vacancy"));
                 v.add(rs.getString("cv"));
             
                
              dtm.addRow(v);
               
              
               }
                
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }

    public void loadsearch() {        
 String id= jTextField26.getText();
            jComboBox1.removeAllItems();
        
            
            
            try {
                ResultSet rs=   db.connect().createStatement().executeQuery("select * from employee where idemployee='"+id+"'");
     
                while(rs.next()){
                   jTextField14.setText(rs.getString("fname"));
                   jTextField11.setText(rs.getString("lname"));
                   String st=String.valueOf(rs.getInt("contactno"));
                  // jTextField16.setText(rs.getInt("contactno")+"");
                         jTextField16.setText("0"+st);
                   jTextField13.setText(rs.getString("occupation"));
                   jTextField22.setText(rs.getString("email"));
                   jTextArea1.setText(rs.getString("address"));
                   jLabel72.setText(rs.getString("empimage"));
                  jLabel74.setText(rs.getString("cvimage"));
                  
                   String cvimg  = rs.getString("cvimage");
                   
                   String gender = rs.getString("gender");
                   String special = rs.getString("specialization");
                    System.out.println(special);
                   //  label.setIcon(ResizeImage(cvimg));
                     jComboBox2.setSelectedItem(special);
                     
                   
                   if(gender.equals("Male")){
                       jComboBox1.addItem("Male");
                       jComboBox1.addItem("Female");
                       
                    }else{
                       jComboBox1.addItem("Female");
                       jComboBox1.addItem("Male");
                   }
                }
            
            } catch (Exception e) {
        }
            }
    
    
   


    
   


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JLabel label;
    // End of variables declaration//GEN-END:variables


    private boolean alreadyadded() {
        String id1 = jTextField26.getText();
        int i=0;
        try {
            
            ResultSet rs= db.connect().createStatement().executeQuery("select idemployee from employee");
            while (rs.next()){
            String idem =  rs.getString("idemployee");
            if(idem.equals(id1)){
                i=i+1;
            }
            }
            
           
        } catch (Exception e) {
        }
         if(i==1){
             JOptionPane.showMessageDialog(null,"You have already Registered this Employee only you can Update Now");
             return true;
            }else{
             return false;
         }
       
    }

    private boolean nostaff() {
         String id2 = jTextField26.getText();
         int i=0;
        try {
            
            ResultSet rs= db.connect().createStatement().executeQuery("select idemployee from employee");
            while (rs.next()){
            String idem =  rs.getString("idemployee");
            if( idem.equals(id2)){
                i=i+1;
            } else {
            }
            }
            
          
            }
        catch (Exception e) {
        }
          if(i==0){
             JOptionPane.showMessageDialog(null,"There is no employee with this ID");  
             return true;
            }else{
                return false;
            }
    }

    private boolean updatestaff() {
         String id1 = jTextField26.getText();
         int i=0;
        try {
            
            ResultSet rs= db.connect().createStatement().executeQuery("select idemployee from employee");
            while (rs.next()){
            String idem =  rs.getString("idemployee");
            if(idem.equals(id1)){
                i=i+1;
            }
            }
            
            
        } catch (Exception e) {
        }
        if(i!=1){
             JOptionPane.showMessageDialog(null,"You have Not registered This Employee");
             return true;
            }else{
            return false; 
        }
    }

    private void load_emp_reg1() {
         DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
            
            try {
                
               ResultSet rs= db.connect().createStatement().executeQuery("select * from employee");
               
               while(rs.next()){
                Vector v = new Vector();
                v.add(rs.getString("idemployee"));
                v.add(rs.getString("fname"));
                v.add(rs.getString("date"));
                v.add(rs.getString("occupation"));
                v.add(rs.getString("email"));
             
                
              dtm.addRow(v);
               
              
               }
                
        } catch (Exception e) {
            e.printStackTrace();
        }
           
    }
}
